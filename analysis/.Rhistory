# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad - Test Group",
"2" = "Visual Ad - Control Group",
"3" = "Audio Ad - Test Group",
"4" = "Audio Ad - Control Group"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad -\nTest Group",
"2" = "Visual Ad -\nControl Group",
"3" = "Audio Ad -\nTest Group",
"4" = "Audio Ad -\nControl Group"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad\n(Test Group)",
"2" = "Visual Ad\n(Control Group)",
"3" = "Audio Ad\n(Test Group)",
"4" = "Audio Ad\n(Control Group)"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad:\nTest Group",
"2" = "Visual Ad\n(Control Group)",
"3" = "Audio Ad\n(Test Group)",
"4" = "Audio Ad\n(Control Group)"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad:\nTest Group",
"2" = "Visual Ad:\nControl Group",
"3" = "Audio Ad:\nTest Group",
"4" = "Audio Ad:\nControl Group"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad:\nTest Group",
"2" = "Visual Ad:\nControl Group",
"3" = "Audio Ad:\nTest Group",
"4" = "Audio Ad:\nControl Group"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
axis.text.x = element_text(hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad:\nTest Group",
"2" = "Visual Ad:\nControl Group",
"3" = "Audio Ad:\nTest Group",
"4" = "Audio Ad:\nControl Group"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
#
axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad:\nTest Group",
"2" = "Visual Ad:\nControl Group",
"3" = "Audio Ad:\nTest Group",
"4" = "Audio Ad:\nControl Group"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
#axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad\n(Test Group)",
"2" = "Visual Ad\n(Control Group)",
"3" = "Audio Ad\n(Test Group)",
"4" = "Audio Ad\n(Control Group)"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
#axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad\n(Test Group)",
"2" = "Visual Ad\n(Control Group)",
"3" = "Audio Ad\n(Test Group)",
"4" = "Audio Ad\n(Control Group)"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
#axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Save the plot as a PNG file
ggsave("sentiment_of_ad.png", plot = plot1, width = 8, height = 6)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)  # Ensure tidyr is loaded for drop_na()
# Prepare data for stacked bar chart, removing NA values only for this analysis
stacked_data <- misinfo_filtered %>%
count(GROUP, SENTIMENT) %>%
group_by(GROUP) %>%
mutate(percentage = n / sum(n) * 100) %>%  # Convert to percentage
ungroup()
# Ensure GROUP is a factor for proper ordering
stacked_data$GROUP <- factor(stacked_data$GROUP, levels = c("1", "2", "3", "4"))
# Convert SENTIMENT to a factor with labels
stacked_data$SENTIMENT <- factor(stacked_data$SENTIMENT, levels = c(1, 2, 3), labels = c("Positive", "Neutral", "Negative"))
# Custom colors for sentiment levels
custom_colors <- c("Positive" = "skyblue", "Neutral" = "orange", "Negative" = "red")
# Define labels for groups
group_titles <- c(
"1" = "Visual Ad\n(Test Group)",
"2" = "Visual Ad\n(Control Group)",
"3" = "Audio Ad\n(Test Group)",
"4" = "Audio Ad\n(Control Group)"
)
# Create the stacked bar chart
stacked_bar_chart <- ggplot(stacked_data, aes(x = GROUP, y = percentage, fill = SENTIMENT)) +
geom_bar(stat = "identity", color = "black") +  # Stacked bars with black borders
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),  # Position labels in center of bars
color = "black", size = 4) +  # Adjust label size and color
labs(
title = "Sentiment of Ad by Group",
x = "\nGroup",
y = "Percentage\n",
fill = "Sentiment"
) +
scale_x_discrete(labels = group_titles) +  # Map numeric groups to names
scale_fill_manual(values = custom_colors) +  # Apply colors
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Center and style the title
#axis.text.x = element_text(angle = 30, hjust = 1),  # Tilt x-axis labels for readability
legend.position = "right",  # Keep legend visible
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10)
)
# Print the stacked bar chart
print(stacked_bar_chart)
# Save the plot as a PNG file
ggsave("sentiment_of_ad.png", plot = stacked_bar_chart, width = 8, height = 6)
